facet_wrap(~site,cols=1,rows=6)
barley |> ggplot(aes(x=yield,y=variety,color=year)) + geom_point() +
facet_wrap(~site)
crashes
crashes |> ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < "11:00:00","23:55:00",`CRASH TIME`)) |>
ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < 11:00:00, 23:55:00,`CRASH TIME`)) |>
ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("11:00:00"), hms::as_hms("23:55:00"),`CRASH TIME`)) |>
ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("23:55:00"),`CRASH TIME`)) |>
ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
ggplot(aes(x=`CRASH TIME`)) + geom_boxplot()
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
summarise(meanCrash = mean(`CRASH TIME`))
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
dplyr::summarise(meanCrash = mean(`CRASH TIME`))
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
dplyr::summarise(meanCrash = circular_mean(`CRASH TIME`))
crashes
install.packages("circular")
library(circular)
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
dplyr::summarise(meanCrash = mean(`CRASH TIME`))
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
dplyr::summarise(meanCrash = circular::mean(`CRASH TIME`))
crashes |> mutate(`CRASH TIME`= if_else(`CRASH TIME` < hms::as_hms("14:00:00"), hms::as_hms("00:05:00"),`CRASH TIME`)) |>
dplyr::summarise(meanCrash = circular::mean.circular(`CRASH TIME`))
flights
load(flights)
barley
barley_swapped = barley
barley_swapped[site == "Morris" & year == 1931]
barley_swapped[site == "Morris"]
barley_swapped[year == 1931]
barley_swapped[year >1931]
barley_swapped[.year >1931]
barley[barley$site == "Morris"]
barley$site
barley$site == "Morris"
barley[barley$site == "Morris"]
barley[barley$site == "Morris",]
barley[site == "Morris",]
barley[barley$site == "Morris",]
barley[barley$site == "Morris",barley$year==1931]
barley[barley$site == "Morris" & barley$year == 1931,]
barley_swapped[barley$site == "Morris" & barley$year ==1931  ] = barley[barley$site == "Morris" & barley$year == 1931,]
barley_swapped[barley$site == "Morris" & barley$year ==1931,  ] = barley[barley$site == "Morris" & barley$year == 1931,]
barley_swapped[barley$site == "Morris" & barley$year ==1931,  ] = barley[barley$site == "Morris" & barley$year == 1932,]
barley_swapped[barley$site == "Morris" & barley$year ==1932,  ] = barley[barley$site == "Morris" & barley$year == 1931,]
barley_swapped[barley$site == "Morris" & barley$year ==1932,yield  ] = barley[barley$site == "Morris" & barley$year == 1931,yield]
barley_swapped[barley$site == "Morris" & barley$year ==1932,c("yield")  ] = barley[barley$site == "Morris" & barley$year == 1931,c("yield")]
skim(barley)
library(MASS)
library(dplyr)
flights = read_csv("/home/georgehagstrom/work/Teaching/DATA607/website/assignments/labs/labData/flightdelays.csv")
flightdelayes
flightdelays
FlightDelays_Long<-
pivot_longer(Flight_Delays,
cols = c(Los_Angeles, Phoenix, San_Diego, San_Francisco, Seattle),
#Select the items for the new column
names_to = "City", #Select the Name of the new column
values_to = "Flight") %>% #Select the Values assigned to the Column
rename("Airline"= 1,"Status" = 2) %>%
fill(Airline, .direction = c("down"))
FlightDelays_Long<-
pivot_longer(flights,
cols = c(Los_Angeles, Phoenix, San_Diego, San_Francisco, Seattle),
#Select the items for the new column
names_to = "City", #Select the Name of the new column
values_to = "Flight") %>% #Select the Values assigned to the Column
rename("Airline"= 1,"Status" = 2) %>%
fill(Airline, .direction = c("down"))
FlightDelays_Long<-
pivot_longer(flights,
cols = c(Los_Angeles, Phoenix, San_Diego, San_Francisco, Seattle),
#Select the items for the new column
names_to = "City", #Select the Name of the new column
values_to = "Flight") %>% #Select the Values assigned to the Column
rename("Airline"= 1,"Status" = 2) %>%
fill(Airline, .direction = c("down"))
FlightDelays_Long
flightdelays
"Delayed"), frac_ontime = flights_ontime/total_flights, frac_delayed = flights_delayed/total_f
ModFlightDelays_Long <- FlightDelays_Long %>%
group_by(City, Airline) %>%
mutate(total_flights = n(), flights_ontime = sum(Status == "On_Time"), flights_delayed = sum(Status =="Delayed"), frac_ontime = flights_ontime/total_flights, frac_delayed = flights_delayed/total_flights)
ModFlightDelays_Long <- FlightDelays_Long %>%
group_by(City, Airline) %>%
mutate(total_flights = n(), flights_ontime = sum(Status == "On_Time"), flights_delayed = sum(Status =="Delayed", frac_ontime = flights_ontime/total_flights, frac_delayed = flights_delayed/total_flights)
ModFlightDelays_Long
ModFlightDelays_Long
FlightDelays_Long
FlightDelays_Long
FlightDelays_Long |> pivot_wider(names_from = Status, values_from = Flight)
FlightDelays_Long |> pivot_wider(names_from = Status, values_from = Flight)
FlightDelays_Long<-
pivot_longer(flights,
cols = c(Los_Angeles, Phoenix, San_Diego, San_Francisco, Seattle),
#Select the items for the new column
names_to = "City", #Select the Name of the new column
values_to = "Flight") %>% #Select the Values assigned to the Column
rename("Airline"= 1,"Status" = 2) %>%
fill(Airline, .direction = c("down"))
FlightDelays_Long
FlightDelays_Long |> pivot_wider(names_from = Status, values_from = Flight)
drinks
drinks = read_csv("../../assignments/labs/labData/MixedDrinkRecipes-Prep.csv")
drinks
drinks = drinks |> pivot_longer(cols = starts_with("ingredient"),
names_to = "Rank",
values_to = "Ingredient")
drinks
seq(0,1,1/10)
seq(0,1,1/(10+1))
cereal
UScereal
install.packages("ggforce")
UScereal
UScereal |> nrow()
seq(1/(65),1-1/(65),1/65)
seq(1/(66),1-1/(66),1/66)
?geom_mark_ellipse
library(ggforce)
?geom_mark_ellipse
?tibble
?annotate
?annotate
?annotate
?annotate
?geom_boxplot
nycbnb
nycbnb = read_csv("/home/georgehagstrom/work/Teaching/DATA607/website/data/nycbnb.csv")
nycbnb
nycbnb |> group_by(neighborhood) |> filter( n() >50 )
nycbnb |> group_by(neighborhood) |> filter( n() >50 ) |> summarise(listings = n())
nycbnb |> group_by(neighborhood) |> filter( n() >50 ) |> summarise(listings = n(), meanPrice = mean(price,na.rm("TRUE")))
nycbnb |> group_by(neighborhood) |> filter( n() >50 ) |> summarise(listings = n(), meanPrice = mean(price,na.rm = TRUE)
)
filter(nycbnb, price>50  )
nycbnb |> group_by(neighborhood) |> filter( n() > 50 )
nycbnb |> filter(borough %in% c("Manhattan","Bronx"))
nycbnb |> filter(borough %in% boroughList) |> group_by(neighborhood) |> summarise(sd = sd(price,na.rm=TRUE))
nycbnb |> filter(borough == "Manhattan" |> group_by(neighborhood) |> summarise(sd = sd(price,na.rm=TRUE))
)
nycbnb |> filter(borough == "Manhattan") |> group_by(neighborhood) |> summarise(sd = sd(price,na.rm=TRUE)
)
UScereal
?geom_violin
diamonds
?geom_contour_filled
?geom_contour
library(GGally)
library(NHANES)
NHANES
library(palmerpenguins)
penguins
flight_data <- read.csv("../work/Teaching/DATA607/website/assignments/labs/labData/flightdelays.csv")
flight_data <- read.csv("/home/georgehagstrom/work/Teaching/DATA607/website/assignments/labs/labData/flightdelays.csv")
flight_data
skim(flight_data)
flight_data = flight_data |> rename(Airline = X, Status= X.1) |> fill(Airline)
flight_data
flight_data = flight_data |> rename(Airline = X, Status= X.1) |> fill(Airline,.direction="down")
flight_data = flight_data |>  fill(Airline,.direction="down")
flight_data
flight_data = flight_data |>  fill("Airline",.direction="down")
flight_data
flight_data |> fill(Airline)
flight_data = read_csv("/home/georgehagstrom/work/Teaching/DATA607/website/assignments/labs/labData/flightdelays.csv")
drinks
mixed_drinks_long <- drinks |>
mutate(Ingredient = case_when(
Ingredient %in% c(
"Absinthe", "Absinthe or pastis", "Absinthe Substitute")
~ "Absinthe or pastis",
Ingredient %in% c(
"Sugar Syrup", "Simple Syrup")
~ "Simple Syrup",
Ingredient %in% c(
"Fresh Lime Juice", "Lime Juice",
"Fresh Lime Juice, lime wheel",
"Fresh lime juice (reserve 1/2 lime shell for garnish)")
~ "Lime Juice",
Ingredient %in% c(
"Peychaud's Bitters", "Peychaud Bitters")
~ "Peychaud Bitters",
Ingredient %in% c(
"port", "Port")
~ "Port",
TRUE ~ Ingredient
))
mixed_drinks_long
mixed_drinks_long |> pivot_wider(
names_from = Rank,
values_from = Ingredient
) |>
select(name,ingredient1,ingredient2) |>
count(ingredient1,ingredient2) |>
arrange(desc())
mixed_drinks_long |> pivot_wider(
names_from = Rank,
values_from = Ingredient
)
drinks_wide = mixed_drinks_long |> pivot_wider(
names_from = Rank,
values_from = Ingredient
)
drinks_wide |> count(ingredient1,ingredient2)
drinks_wide |> count(ingredient1,ingredient2) |> arrange(desc(n))
drinks_wide |> pairwise_count(ingredient1,ingredient2) |> arrange(desc(n))
library(widyr)
install.package(widyr)
install.packages(widyr)
install.packages("widyr")
library(widyr)
drinks_wide |> pairwise_count(ingredient1,ingredient2) |> arrange(desc(n))
drinks_wide |> count(ingredient1,ingredient2) |> arrange(desc(n))
?pairwise_count
mixed_drinks_long
mixed_drinks_long |> filter(Rank %in% c("ingredient1","ingredient2")) |>
pairwise_count(Ingredient,name)
mixed_drinks_long |> filter(Rank %in% c("ingredient1","ingredient2")) |>
pairwise_count(Ingredient,name) |> arrange(desc(n))
drinks_wide |> count(ingredient1,ingredient2) |> arrange(desc(n))
drop_na()
drinks
drinks |> drop_na(Ingredient)
library(reprex)
plot1
plot1
source("~/work/Teaching/DATA607/website/meetups/Meetup4/ReprexAndDebuggingCode.R")
library(tidyverse)
library(lubridate)
library(scales)
library(patchwork)
library(ggthemes)
library(DT)
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
plot1 = energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec) |>
pivot_longer(
cols = c("hydro_share_elec",
"wind_share_elec",
"solar_share_elec",
"coal_share_elec",
"gas_share_elec",
"nuclear_share_elec"),
names_to = "GeneratorType",
values_to = "Electricity_Per_Capita"
) |>
ggplot(aes(x=year,y=Electricity_Per_Capita,color=country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ GeneratorType, scales = "free") +
theme_classic() +
ylab("Share of Electricity from Different Sources") +
xlab("Year") +
labs(title = "Change in Electricity Generation Share over time",
color = "Country")
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
plot1 = energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec) |>
pivot_longer(
cols = c("hydro_share_elec",
"wind_share_elec",
"solar_share_elec",
"coal_share_elec",
"gas_share_elec",
"nuclear_share_elec"),
names_to = "GeneratorType",
values_to = "Electricity_Per_Capita"
) |>
ggplot(aes(x=year,y=Electricity_Per_Capita,color=country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ GeneratorType, scales = "free") +
theme_classic() +
ylab("Share of Electricity from Different Sources") +
xlab("Year") +
labs(title = "Change in Electricity Generation Share over time",
color = "Country")
energy_data
energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec)
energy_data |> pull(nuclear_share_elec)
energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(nuclear_share_elec)
countries_included
energy_data |>
group_by(iso_code,country) |>
select(nuclear_share_elec)
energy_data |>
select(nuclear_share_elec)
library(tidyverse)
library(dplyr)
library(lubridate)
library(scales)
library(patchwork)
library(ggthemes)
library(DT)
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
plot1 = energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec) |>
pivot_longer(
cols = c("hydro_share_elec",
"wind_share_elec",
"solar_share_elec",
"coal_share_elec",
"gas_share_elec",
"nuclear_share_elec"),
names_to = "GeneratorType",
values_to = "Electricity_Per_Capita"
) |>
ggplot(aes(x=year,y=Electricity_Per_Capita,color=country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ GeneratorType, scales = "free") +
theme_classic() +
ylab("Share of Electricity from Different Sources") +
xlab("Year") +
labs(title = "Change in Electricity Generation Share over time",
color = "Country")
detach("package:vegan", unload=TRUE)
detach("package:MASS", unload=TRUE)
detach("package:ggforce", unload=TRUE)
detach("package:ipred", unload=TRUE)
detach("package:MASS", unload=TRUE)
energy_data |>
select(nuclear_share_elec)
library(ggforce)
energy_data |>
select(nuclear_share_elec)
library(MASS)
energy_data |>
select(nuclear_share_elec)
reprex()
reprex()
reprex(session_info = TRUE)
``` r
library(tidyverse)
energy_data |> read_csv("../../../LectureSlides/owid-energy-data.csv")
```r
library(tidyverse)
energy_data |> read_csv("../../../LectureSlides/owid-energy-data.csv")
?select
energy_data |>
select(nuclear_share_elec)
library(reprex)
library(tidyverse)
library(dplyr)
library(lubridate)
library(scales)
library(patchwork)
library(ggthemes)
library(DT)
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
plot1 = energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec) |>
pivot_longer(
cols = c("hydro_share_elec",
"wind_share_elec",
"solar_share_elec",
"coal_share_elec",
"gas_share_elec",
"nuclear_share_elec"),
names_to = "GeneratorType",
values_to = "Electricity_Per_Capita"
) |>
ggplot(aes(x=year,y=Electricity_Per_Capita,color=country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ GeneratorType, scales = "free") +
theme_classic() +
ylab("Share of Electricity from Different Sources") +
xlab("Year") +
labs(title = "Change in Electricity Generation Share over time",
color = "Country")
energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec)
energy_data |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec)
energy_data |>
select(nuclear_share_elec)
library(palmerpenguins)
penguins |>
select(species)
reprex::reprex()
penguins |>
select(species)
?select
detach("package:MASS", unload=TRUE)
detach("package:ggforce", unload=TRUE)
detach("package:ipred", unload=TRUE)
detach("package:MASS", unload=TRUE)
penguins |>
select(species)
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
energy_data |>
select(       nuclear_share_elec)
library(reprex)
library(tidyverse)
library(dplyr)
library(lubridate)
library(scales)
library(patchwork)
library(ggthemes)
library(DT)
energy_data = read_csv("../../../LectureSlides/owid-energy-data.csv")
countries_included = c("USA","DEU","FRA","SWE","CHN")
plot1 = energy_data |>
filter(iso_code %in% countries_included, year > 1980) |>
group_by(iso_code,country) |>
select(iso_code,
year,
hydro_share_elec,
wind_share_elec,
solar_share_elec,
coal_share_elec,
gas_share_elec,
nuclear_share_elec) |>
pivot_longer(
cols = c("hydro_share_elec",
"wind_share_elec",
"solar_share_elec",
"coal_share_elec",
"gas_share_elec",
"nuclear_share_elec"),
names_to = "GeneratorType",
values_to = "Electricity_Per_Capita"
) |>
ggplot(aes(x=year,y=Electricity_Per_Capita,color=country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ GeneratorType, scales = "free") +
theme_classic() +
ylab("Share of Electricity from Different Sources") +
xlab("Year") +
labs(title = "Change in Electricity Generation Share over time",
color = "Country")
plot1
